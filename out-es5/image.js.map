{"version":3,"sources":["../out/image.js"],"names":["Object","defineProperty","exports","value","fileToBase64","imageFileToBase64","renderImage","generateImageBase64","loadImageConfig","errors_1","require","imageDisaplyText","config","draws","text","imageText","options","ctx","canvasWidth","canvasHeight","fontSize","Math","floor","length","bgColor","textColor","assign","fillStyle","fillRect","font","textAlign","textWidth","startX","startY","fillText","width","height","obj","canvas","document","createElement","getContext","draw","toDataURL","PREVIEW_IMAGE_DEFAULT_WIDTH","PREVIEW_IMAGE_DEFAULT_HEIGHT","element","errors","argumentNull","imageUrl","src","indexOf","setAttribute","imageSize","match","arr","split","Number","valueOf","title","s","src_replace","Promise","resolve","reject","loadImage","then","base64","catch","image","Image","onload","imageFile","size","reader","FileReader","readAsArrayBuffer","ev","blob","Blob","event","target","window","blobURL","createObjectURL","drawImage","data","file","result","toString","onerror","error","readAsDataURL"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fileToBase64 = exports.imageFileToBase64 = exports.renderImage = exports.generateImageBase64 = exports.loadImageConfig = void 0;\r\nconst errors_1 = require(\"./errors\");\r\nexports.loadImageConfig = {\r\n    /** 图片显示的文字 */\r\n    imageDisaplyText: '',\r\n};\r\nlet config = exports.loadImageConfig;\r\nlet draws = {\r\n    text: (imageText, options) => {\r\n        return (ctx, canvasWidth, canvasHeight) => {\r\n            // let fontSize1 = Math.floor(canvasHeight / 3 * 0.8);\r\n            let fontSize = Math.floor((canvasWidth / imageText.length) * 0.6);\r\n            let bgColor = 'whitesmoke';\r\n            let textColor = '#999';\r\n            // let fontSize = Math.min(fontSize1, fontSize2);\r\n            options = Object.assign({\r\n                fontSize,\r\n                bgColor,\r\n                textColor\r\n            }, options);\r\n            ctx.fillStyle = options.bgColor; //'whitesmoke';\r\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n            // 设置字体\r\n            ctx.font = `Bold ${options.fontSize}px Arial`;\r\n            // 设置对齐方式\r\n            ctx.textAlign = \"left\";\r\n            // 设置填充颜色\r\n            ctx.fillStyle = options.textColor; //\"#999\";\r\n            let textWidth = fontSize * imageText.length;\r\n            let startX = Math.floor((canvasWidth - textWidth) * 0.5);\r\n            let startY = Math.floor((canvasHeight - options.fontSize) * 0.3);\r\n            // 设置字体内容，以及在画布上的位置\r\n            ctx.fillText(imageText, startX, Math.floor(canvasHeight * 0.6));\r\n        };\r\n    }\r\n};\r\nfunction generateImageBase64(width, height, obj, options) {\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = width; //img_width;\r\n    canvas.height = height; //img_height;\r\n    var ctx = canvas.getContext('2d');\r\n    let draw = typeof obj == 'string' ? draws.text(obj, options) : obj;\r\n    draw(ctx, width, height);\r\n    return canvas.toDataURL();\r\n}\r\nexports.generateImageBase64 = generateImageBase64;\r\nconst PREVIEW_IMAGE_DEFAULT_WIDTH = 200;\r\nconst PREVIEW_IMAGE_DEFAULT_HEIGHT = 200;\r\n/**\r\n * 在 IMG 元素上渲染图片\r\n * @param element 要渲染的 IMG 元素\r\n * @param options 渲染选项，默认将 IMG 元素的 SRC 属性渲染出来\r\n */\r\nfunction renderImage(element, options) {\r\n    options = options || {};\r\n    if (!element)\r\n        throw errors_1.errors.argumentNull('element');\r\n    let imageUrl = element.src || '';\r\n    if (imageUrl.indexOf('data:image/png;base64') == 0 || element['rendered']) {\r\n        return;\r\n    }\r\n    element.setAttribute(\"image-url\", imageUrl);\r\n    //====================================================\r\n    // 通过 URL 设置图片大小\r\n    if (imageUrl && !options.imageSize) {\r\n        var match = imageUrl.match(/_\\d+_\\d+/);\r\n        if (match && match.length > 0) {\r\n            var arr = match[0].split('_');\r\n            if (arr.length >= 2) {\r\n                var width = new Number(arr[1]).valueOf();\r\n                var height = new Number(arr[2]).valueOf();\r\n                options.imageSize = { width, height };\r\n            }\r\n        }\r\n    }\r\n    //====================================================\r\n    options.imageSize = options.imageSize || { width: PREVIEW_IMAGE_DEFAULT_WIDTH, height: PREVIEW_IMAGE_DEFAULT_HEIGHT };\r\n    //====================================================\r\n    if (!options.imageText) {\r\n        options.imageText = element.title || '';\r\n        ;\r\n    }\r\n    let s = options.imageSize;\r\n    //设置默认的图片\r\n    var src_replace = generateImageBase64(s.width, s.height, draws.text(options.imageText || config.imageDisaplyText)); //getPreviewImage(imageText || config.imageDisaplyText, img_width, img_height);\r\n    element.setAttribute('src', src_replace);\r\n    return new Promise((resolve, reject) => {\r\n        if (options.loadImage) {\r\n            options.loadImage()\r\n                .then(base64 => base64 ? Promise.resolve(base64) : Promise.reject({}))\r\n                .catch(() => {\r\n                let base64 = generateImageBase64(s.width, s.height, draws.text('加载图片失败', { fontSize: 24 }));\r\n                return Promise.resolve(base64);\r\n            })\r\n                .then((base64) => {\r\n                element.src = base64;\r\n                element['rendered'] = true;\r\n            });\r\n        }\r\n        else {\r\n            var image = new Image();\r\n            image.onload = function () {\r\n                element.src = this.src;\r\n                element['rendered'] = true;\r\n                resolve(element.src);\r\n            };\r\n            image.src = imageUrl;\r\n        }\r\n    });\r\n}\r\nexports.renderImage = renderImage;\r\nfunction imageFileToBase64(imageFile, size) {\r\n    if (!imageFile)\r\n        throw errors_1.errors.argumentNull('imageFile');\r\n    return new Promise((resolve, reject) => {\r\n        var reader = new FileReader();\r\n        reader.readAsArrayBuffer(imageFile);\r\n        reader.onload = (ev) => {\r\n            var blob = new Blob([event.target['result']]);\r\n            window['URL'] = window['URL'] || window['webkitURL'];\r\n            var blobURL = window['URL'].createObjectURL(blob);\r\n            var image = new Image();\r\n            image.src = blobURL;\r\n            image.onload = () => {\r\n                var canvas = document.createElement('canvas');\r\n                size = size || {};\r\n                let width = size.width != null && size.width < image.width ? size.width : image.width;\r\n                let height = size.height != null && size.height < image.height ? size.height : image.height;\r\n                if (width != null && height == null) {\r\n                    height = width / image.width * image.height;\r\n                }\r\n                else if (width == null && height != null) {\r\n                    width = height / image.height * image.width;\r\n                }\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var ctx = canvas.getContext(\"2d\");\r\n                ctx.drawImage(image, 0, 0, width, height);\r\n                let data = canvas.toDataURL(\"image/jpeg\", 0.5);\r\n                resolve({ base64: data, width, height });\r\n            };\r\n        };\r\n    });\r\n}\r\nexports.imageFileToBase64 = imageFileToBase64;\r\nfunction fileToBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        let reader = new FileReader();\r\n        reader.onload = function () {\r\n            resolve(reader.result.toString());\r\n        };\r\n        reader.onerror = function () {\r\n            reject(reader.error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    });\r\n}\r\nexports.fileToBase64 = fileToBase64;\r\n"],"file":"image.js"}